version: '2'

services:
  db:
    image: postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./data:/var/lib/postgres
  web:
    image: inftxos:local
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      - OPENSTATES_API_KEY=${OPENSTATES_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - GOOGLE_ANALYTICS=${GOOGLE_ANALYTICS}
      - TPJ_DB_URL=${TPJ_DB_URL}
      - TPJ_DB_USER=${TPJ_DB_USER}
      - TPJ_DB_PASSWORD=${TPJ_DB_PASSWORD}
      - TPJ_DB_HOST=${TPJ_DB_HOST}
      - TPJ_DB_PORT=${TPJ_DB_PORT}
      - TPJ_DB_NAME=${TPJ_DB_NAME}
      - TPJ_DB_ENGINE=${TPJ_DB_ENGINE}
      - ODBCSYSINI=/usr/src/app/docker_config_files
      - ODBCINI=/usr/src/app/docker_config_files/odbc.ini
      - DJANGO_DEBUG=True
    volumes:
      - .:/usr/src/app
    ports:
      - "5120:5120"
    depends_on:
      - "db"
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.local
    volumes:
      - './frontend:/usr/src/app'
      - '/usr/src/app/node_modules'
    ports:
      - '3000:3000'
    depends_on:
      - "web"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
